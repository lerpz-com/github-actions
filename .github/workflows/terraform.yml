name: Apply terraform plan

on:
  workflow_call:
    inputs:
      DEPLOY_ENV:
        description: The environment to deploy to
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    
    environment: ${{ inputs.DEPLOY_ENV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.2
      
      - name: Terraform init
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true
        run: terraform init -backend-config=env/${{ inputs.DEPLOY_ENV }}.hcl
      
      - name: Terraform plan
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true
          DEPLOY_ENV: ${{ inputs.DEPLOY_ENV }}
        run: terraform plan -var "deploy_env=$DEPLOY_ENV" -no-color -out tfplan

      - name: Save terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan

  terraform-apply:
    runs-on: ubuntu-latest

    needs: [terraform-plan]
    
    environment: ${{ inputs.DEPLOY_ENV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.2

      - name: Log in to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform init
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true
        run: terraform init -backend-config=env/${{ inputs.DEPLOY_ENV }}.hcl
      
      - name: Download terraform plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
 
      - name: Terraform apply
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_USE_OIDC: true
        run: terraform apply -auto-approve tfplan
