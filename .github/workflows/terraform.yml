name: Apply terraform plan

on:
  workflow_call:
    inputs:
      DEPLOY_ENV:
        description: The environment to use for deployment
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true

jobs:
  terraform-plan:
    if: inputs.DEPLOY_ENV == 'prod' || inputs.DEPLOY_ENV == 'stag'
    runs-on: ubuntu-latest
    
    environment: ${{ inputs.DEPLOY_ENV }}

    outputs:
      TERRAFORM_CHANGES: ${{ steps.terraform-plan.outputs.TERRAFORM_CHANGES }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Terraform init
        working-directory: terraform
        run: |
          if [[ -d env ]]; then
            terraform init -backend-config=env/${{ inputs.DEPLOY_ENV }}.hcl
          else
            terraform init
          fi
      
      - name: Terraform plan
        id: terraform-plan
        working-directory: terraform
        env:
          TF_VAR_deploy_env: ${{ inputs.DEPLOY_ENV }}
        run: |
          set +e
          terraform plan -input=false -detailed-exitcode -no-color -out tfplan 
          exitcode=$?

          if [[ $exitcode -eq 2 ]]; then
            echo "TERRAFORM_CHANGES=true"
            echo "TERRAFORM_CHANGES=true" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "TERRAFORM_CHANGES=false"
            echo "TERRAFORM_CHANGES=false" >> $GITHUB_OUTPUT
            exit $exitcode
          fi

      - name: Save terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan

  terraform-apply:
    if: needs.terraform-plan.outputs.TERRAFORM_CHANGES == 'true'
    runs-on: ubuntu-latest

    needs: [terraform-plan]
    
    environment: ${{ inputs.DEPLOY_ENV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Log in to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}

      - name: Terraform init
        working-directory: terraform
        run: |
          if [[ -d env ]]; then
            terraform init -backend-config=env/${{ inputs.DEPLOY_ENV }}.hcl
          else
            terraform init
          fi
      
      - name: Download terraform plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: terraform
 
      - name: Terraform apply
        working-directory: terraform
        run: terraform apply -input=false -auto-approve tfplan
